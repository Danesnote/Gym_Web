<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">



	<bean id="customAccessDenied"
		class="com.nuts.security.CustomAccessDeniedHandler"></bean>
	<bean id="customLoginSuccess"
		class="com.nuts.security.CustomLoginSuccessHandler"></bean> <!-- 핸들러들 id 설정 -->

	<!-- <bean id="customPasswordEncoder" class="com.nuts.security.CustomNoOpPasswordEncoder"></bean> -->

	<bean id="bcryptPasswordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

	<bean id="customUserDetailsService"
		class="com.nuts.security.CustomUserDetailsService"></bean>


	<security:http>

		<security:intercept-url pattern="/**" access="permitAll" /> <!-- 설정 안한 나머지는 모두 접근가능 -->
		 
		<security:intercept-url pattern="/Login" access="isAnonymous()" /> <!-- 익명 사용자만 접근 가능 -->
		<security:intercept-url pattern="/join" access="isAnonymous()" />
		
		<security:intercept-url pattern="/member/**" access="hasAnyRole('ROLE_MEMBER', 'ROLE_ADMIN')" /> <!-- 어드민, 멤버 권한 둘다 가능 -->

		<security:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" /> <!-- 편하게 권한을 나눠주려면 폴더로 구분짓는게 좋을듯하다 -->

		<security:access-denied-handler
			ref="customAccessDenied" />

		<security:form-login login-page="/Login"
			authentication-success-handler-ref="customLoginSuccess" />

		<!-- <security:csrf disabled="true"/> -->

		<security:logout logout-url="/Logout"
			invalidate-session="true" />

		<security:remember-me
			data-source-ref="dataSource" token-validity-seconds="604800" /> <!-- 자동로그인 데이터 저장 시간 설정 -->

		<security:logout logout-url="/Logout"
			invalidate-session="true" delete-cookies="remember-me,JSESSION_ID" />


	</security:http>



	<!-- <security:authentication-manager> <security:authentication-provider> 
		<security:user-service> <security:user name="member" password="{noop}member" 
		authorities="ROLE_MEMBER"/> <security:user name="admin" password="{noop}admin" 
		authorities="ROLE_MEMBER, ROLE_ADMIN"/> </security:user-service> </security:authentication-provider> 
		</security:authentication-manager> -->

	<!-- <security:authentication-manager> <security:authentication-provider> 
		<security:jdbc-user-service data-source-ref="dataSource" /> <security:jdbc-user-service 
		data-source-ref="dataSource" users-by-username-query="select userid , userpw 
		, enabled from tbl_member where userid = ? " authorities-by-username-query="select 
		userid, auth from tbl_member_auth where userid = ? " /> <security:password-encoder 
		ref="customPasswordEncoder" /> <security:password-encoder ref="bcryptPasswordEncoder" 
		/> </security:authentication-provider> </security:authentication-manager> -->


	<security:authentication-manager>

		<security:authentication-provider
			user-service-ref="customUserDetailsService">

			<security:password-encoder
				ref="bcryptPasswordEncoder" />

		</security:authentication-provider>

	</security:authentication-manager>

</beans>
