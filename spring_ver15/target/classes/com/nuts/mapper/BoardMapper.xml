<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nuts.mapper.BoardMapper">
<!-- 페이징 크리테리아 -->
	<sql id="criteria">
		<trim prefix="(" suffix=") AND " prefixOverrides="OR">
			<foreach item='type' collection="typeArr">
				<trim prefix="OR">
					<choose>
						<when test="type == 'T'.toString()">
							title like '%'||#{keyword}||'%'
						</when>
						<when test="type == 'C'.toString()">
							content like '%'||#{keyword}||'%'
						</when>
						<when test="type == 'W'.toString()">
							writer like '%'||#{keyword}||'%'
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>
<!-- 리스트 출력 -->
	<select id="getList" resultType="com.nuts.domain.BoardVO">
	<![CDATA[
		select * from freeboard_tb where
		bno > 0 and rownum <= 100
		]]>
	</select>
<!-- 게시글 등록 -->
	<insert id="insert">
		insert into freeboard_tb (bno,title,content,writer)
		values (seq_freeboard.nextval, #{title}, #{content}, #{writer})
	</insert>

	<insert id="insertSelectKey">

		<selectKey keyProperty="bno" order="BEFORE"
			resultType="long">
			select seq_freeboard.nextval from dual
		</selectKey>

		insert into freeboard_tb (bno,title,content, writer)
		values (#{bno},
		#{title}, #{content}, #{writer})
	</insert>
<!-- 게시글 조회 -->
	<select id="read" resultType="com.nuts.domain.BoardVO">
		select * from freeboard_tb where
		bno =
		#{bno}
	</select>

<!-- 게시글 삭제 -->
	<delete id="delete">
		delete freeboard_tb where bno = #{bno}
	</delete>
<!-- 수정 -->
	<update id="update">
		update freeboard_tb
		set title= #{title},
		content=#{content},
		writer = #{writer},
		updateDate = sysdate
		where bno =
		#{bno}
	</update>




	<!-- <select id="getListWithPaging" resultType="com.nuts.domain.BoardVO"> 
		<![CDATA[ select bno, title, content, writer, regdate, updatedate from ( 
		select /*+INDEX_DESC(freeboard_tb pk_board) */ rownum rn, bno, title, content, 
		writer, regdate, updatedate from freeboard_tb where rownum <= #{pageNum} 
		* #{amount} ) where rn > (#{pageNum} -1) * #{amount} ]]> </select> -->

<!-- 페이징 (DESC) -->
	<select id="getListWithPaging"
		resultType="com.nuts.domain.BoardVO">
  <![CDATA[
  select 
    bno, title, content, writer, regdate, updatedate, replycnt
  from 
      (
      select /*+INDEX_DESC(freeboard_tb pk_board) */
        rownum rn, bno, title, content, writer, regdate, updatedate, replycnt 
      from 
        freeboard_tb
      where 
  ]]>

		<include refid="criteria"></include> 
      
  <![CDATA[    
      rownum <= #{pageNum} * #{amount}
      )
  where rn > (#{pageNum} -1) * #{amount}   
  ]]>
	</select>



<!-- 개수 카운팅 -->
	<select id="getTotalCount" resultType="int">
		select count(*) from freeboard_tb where

		<include refid="criteria"></include>

		bno > 0

	</select>
<!-- 댓글 수정 -->
	<update id="updateReplyCnt">
		update freeboard_tb set replycnt = replycnt + #{amount} where bno = #{bno}
	</update>
<!-- 운동기록용 크리테리아 -->
	<sql id="criteria1"> <!-- for exdata -->
		<trim prefix="(" suffix=") AND " prefixOverrides="OR">
			<foreach item='type' collection="typeArr">
				<trim prefix="OR">
					<choose>
						<when test="type == 'N'.toString()">
							eno like '%'||#{keyword}||'%'
						</when>
						<when test="type == 'U'.toString()">
							userid like '%'||#{keyword}||'%'
						</when>
						<when test="type == 'S'.toString()">
							extime_s like '%'||#{keyword}||'%'
						</when>
						<when test="type == 'E'.toString()">
							extime_e like '%'||#{keyword}||'%'
						</when>
						<when test="type == 'I'.toString()">
							exid like '%'||#{keyword}||'%'
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>
<!-- 운동기록조회 -->
	<select id="exdata" resultType="com.nuts.domain.BoardVO">
	<![CDATA[
		select * from user_ex_rec where
		eno > 0 and rownum <= 100 order by eno desc
		]]>
	</select>
<!-- 게시글과 마찬가지 -->
	<select id="getListWithPaging1"
		resultType="com.nuts.domain.BoardVO"> <!-- for exdata -->
  <![CDATA[
  select 
    eno, userid, extime_s, extime_e, exid 
  from 
      (
      select /*+INDEX_DESC(user_ex_rec pk_exdata) */
        rownum rn, eno, userid, extime_s, extime_e, exid
      from 
        user_ex_rec
      where 
  ]]>

		<include refid="criteria1"></include> 
      
  <![CDATA[    
      rownum <= #{pageNum} * #{amount}
      )
  where rn > (#{pageNum} -1) * #{amount}  
 
  ]]>
	</select>

	<select id="getTotalCount1" resultType="int"> <!-- for exdata -->
		select count(*) from user_ex_rec where

		<include refid="criteria1"></include>

		eno > 0

	</select>
<!-- 운동등록 -->
	<update id="exregister">
		update user_ex_rec set exid = exid||'/'||#{exid}
		where eno = #{eno}
	</update>
<!-- 시간등록 -->
	<insert id="extimeregister">
		insert into user_ex_rec (eno, userid, extime_s,
		extime_e)
		values (seq_exdata.nextval,
		#{userid}, #{extime_s},
		#{extime_e})
	</insert>

</mapper>
